package algorithms;

import java.util.HashMap;
import java.util.Map;

public class MostCommonWord {

        public static String mostCommonWord(String paragraph, String[] banned) {
            String[] words = paragraph.toLowerCase().split("\\W");
            Map<String, Integer> wordMap= new HashMap<>();

            for(int i=0; i<words.length; i++){
                if(!words[i].equals("")){            //trick: need remove all "" generated by [,.'!]*
                    if (wordMap.containsKey(words[i])){
                        wordMap.put(words[i], wordMap.get(words[i])+1);
                    }else{
                        wordMap.put(words[i], 1);
                    }
                }
            }

            for(int n=0; n<banned.length; n++){
                if(wordMap.containsKey(banned[n].toLowerCase())){
                    wordMap.remove(banned[n].toLowerCase());
                }
            }
            int maxOccur =0;
            String maxString =null;
            for(Map.Entry<String, Integer> entry: wordMap.entrySet()){
                if(entry.getValue()>maxOccur){
                    maxOccur = entry.getValue();
                    maxString = entry.getKey();
                }
            }
            return maxString;

        }
    public static void main(String args[]){
            String [] banned = {"a"};
            MostCommonWord.mostCommonWord("a, a, a, a, b,b,b,c, c"
                    ,banned);
    }
}
